const cypher={cases:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","`","1","2","3","4","5","6","7","8","9","0","-","=","[","]","\\",";","'",",",".","/","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","~","!","@","#","$","%","^","&","*","(",")","_","+","{","}","|",":",'"',"<",">","?"],goIn:function(e,n){const c=(n%e.length+e.length)%e.length;return e[c]},encode:function(e,n){let c="";for(let r=0;r<String(e).length;r++)cypher.cases.includes(String(e)[r])?c+=cypher.goIn(cypher.cases,cypher.cases.indexOf(String(e)[r])+n):c+=String(e)[r];return c},decode:function(e,n){let c="";for(let r=0;r<String(e).length;r++)cypher.cases.includes(String(e)[r])?c+=cypher.goIn(cypher.cases,cypher.cases.indexOf(String(e)[r])-n):c+=String(e)[r];return c}};